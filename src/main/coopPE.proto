syntax = "proto2";

package coopPE.proto;

enum Outcome {
  TIME = 0;
  CAUGHT = 1;
  GOAL = 2;
}


// represent a location in the network for a unit
message Node {
  // a unique identifier for the node
  optional uint32 index = 1;

  // location in space
  optional double x = 2;
  optional double y = 3;

  // adjacent nodes corresponding to the actions available for Units
  optional uint32 up = 4;
  optional uint32 down = 5;
  optional uint32 left = 6;
  optional uint32 right = 7;
}

// a network will have a list of nodes as the foundation
message NodeList {
  repeated Node nodes = 1;
}

// settings to initialize a network object
message NetworkInit {
  // Only a grid network so far
  enum NetType {
    GRID = 0;
  }

  optional NetType type = 1;

  // possible values to customize for networks
  optional uint32 dim_x = 2;
  optional uint32 dim_y = 3;
  optional bool wrap = 4 [default = false];
}


// a unit
message Unit {
  enum Action{
    UP = 0;
    DOWN = 1;
    LEFT = 2;
    RIGHT = 3;
    NOTHING = 4;
  }

  // location for the unit
  optional uint32 loc = 1;

  // action for the unit
  optional Action action = 2;
}


// sim data
message SimStudyData {
  repeated RepData reps = 1;
  optional NodeList network = 2;
}

// rep data
message RepData {
  optional Outcome outcome = 1;
  repeated TimePointData time_points = 2;
}

// time point
message TimePointData {
  repeated Unit pursuers = 1;
  optional InformantTipData informant = 2;
  repeated double posterior = 3;
  optional Unit evader = 4;
}

// informant
message InformantTipData {
  optional bool has_tip = 1 [default = false];
  repeated uint32 locs = 2;
  optional double reliable = 3 [default = 0.0];
  optional double deceitful = 4 [default = 0.0];
  optional double noisy = 5 [default = 1.0];
}